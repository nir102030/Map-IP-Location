{"version":3,"sources":["hooks/useLocation.js","components/Map.js","components/Loader.js","components/ErrorMessage.js","screens/MapScreen.js","App.js","index.js"],"names":["useLocation","useState","location","setLocation","error","setError","getLocation","a","fetch","response","json","result","console","log","city","country","country_name","latitude","longitude","useEffect","Map","className","title","style","border","height","width","loading","allowFullScreen","src","Loader","Spinner","animation","role","ErrorMessage","MapScreen","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA+BeA,EA7BK,WAAO,IAAD,EACOC,mBAAS,IADhB,mBAClBC,EADkB,KACRC,EADQ,OAECF,mBAAS,IAFV,mBAElBG,EAFkB,KAEXC,EAFW,KAInBC,EAAW,uCAAG,8BAAAC,EAAA,+EAEKC,MACtB,0FAHiB,cAEZC,EAFY,gBAKGA,EAASC,OALZ,OAKZC,EALY,OAMlBC,QAAQC,IAAIF,GACZR,EAAY,CACXW,KAAMH,EAAOG,KACbC,QAASJ,EAAOK,aAChBC,SAAUN,EAAOM,SACjBC,UAAWP,EAAOO,YAXD,kDAclBb,EAAS,sCAdS,0DAAH,qDAsBjB,OAJAc,qBAAU,WACTb,MACE,IAEI,CAACJ,EAAUE,I,OCPJgB,EAnBH,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACd,OACC,sBAAKmB,UAAU,UAAf,UACC,sBAAKA,UAAU,WAAf,UACEnB,EAASY,KADX,KACmBZ,EAASa,WAE5B,qBAAKM,UAAU,eAAf,SACC,wBACCC,MAAM,MACNC,MAAO,CAAEC,OAAQ,EAAGC,OAAQ,OAAQC,MAAO,QAC3CC,QAAQ,OACRC,iBAAe,EACfC,IAAG,mGAA8F3B,EAASe,SAAvG,YAAmHf,EAASgB,mB,OCHrHY,EARA,WACd,OACC,cAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACC,sBAAMZ,UAAU,UAAhB,2BCAYa,G,KAJM,SAAC,GAAe,IAAb9B,EAAY,EAAZA,MACvB,OAAO,qBAAKiB,UAAU,QAAf,SAAwBjB,MCcjB+B,EAVG,WAAO,IAAD,EACGnC,IADH,mBAChBE,EADgB,KACNE,EADM,KAGvB,OACC,qBAAKiB,UAAU,YAAf,SACEjB,EAAQ,cAAC,EAAD,CAAcA,MAAOA,IAAYF,EAAW,cAAC,EAAD,CAAKA,SAAUA,IAAe,cAAC,EAAD,OCAvEkC,MARf,WACC,OACC,qBAAKf,UAAU,MAAf,SACC,cAAC,EAAD,OCFHgB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,U","file":"static/js/main.d2b30fbe.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useLocation = () => {\r\n\tconst [location, setLocation] = useState('');\r\n\tconst [error, setError] = useState('');\r\n\r\n\tconst getLocation = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t'https://api.ipdata.co?api-key=dcb19aafdd3accd0ca61b014f91a6cc5888d57f4f703a9758da3751e'\r\n\t\t\t);\r\n\t\t\tconst result = await response.json();\r\n\t\t\tconsole.log(result);\r\n\t\t\tsetLocation({\r\n\t\t\t\tcity: result.city,\r\n\t\t\t\tcountry: result.country_name,\r\n\t\t\t\tlatitude: result.latitude,\r\n\t\t\t\tlongitude: result.longitude,\r\n\t\t\t});\r\n\t\t} catch {\r\n\t\t\tsetError('Sorry, the location was not found!');\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetLocation();\r\n\t}, []);\r\n\r\n\treturn [location, error];\r\n};\r\n\r\nexport default useLocation;\r\n","import React from 'react';\r\n\r\nconst Map = ({ location }) => {\r\n\treturn (\r\n\t\t<div className=\"mapView\">\r\n\t\t\t<div className=\"mapTitle\">\r\n\t\t\t\t{location.city}, {location.country}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mapContainer\">\r\n\t\t\t\t<iframe\r\n\t\t\t\t\ttitle=\"map\"\r\n\t\t\t\t\tstyle={{ border: 0, height: '100%', width: '100%' }}\r\n\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\tallowFullScreen\r\n\t\t\t\t\tsrc={`https://www.google.com/maps/embed/v1/place?key=AIzaSyCdQymwSuF0P6Ee-ffX0ZtWjpJdpaT5eLk&q=${location.latitude},${location.longitude}`}\r\n\t\t\t\t></iframe>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<Spinner animation=\"border\" role=\"status\">\r\n\t\t\t<span className=\"sr-only\">Loading...</span>\r\n\t\t</Spinner>\r\n\t);\r\n};\r\n\r\nexport default Loader;\r\n","import '../styles/styles.css';\r\n\r\nconst ErrorMessage = ({ error }) => {\r\n\treturn <div className=\"error\">{error}</div>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport useLocation from '../hooks/useLocation';\r\nimport Map from '../components/Map';\r\nimport Loader from '../components/Loader';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport '../styles/styles.css';\r\n\r\nconst MapScreen = () => {\r\n\tconst [location, error] = useLocation();\r\n\r\n\treturn (\r\n\t\t<div className=\"mapScreen\">\r\n\t\t\t{error ? <ErrorMessage error={error} /> : location ? <Map location={location} /> : <Loader />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MapScreen;\r\n","import '../src/styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapScreen from './screens/MapScreen';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<MapScreen />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}